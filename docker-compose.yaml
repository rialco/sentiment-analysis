version: "3.7"

services:
  postgres:
    container_name: sentiment-db
    image: postgres:14.1-alpine3.15
    restart: always
    environment:
      POSTGRES_USER: pf
      POSTGRES_PASSWORD: pf
      POSTGRES_DB: sentiments
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pf -d sentiments"]
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    container_name: event-stream
    build: ./stream_service
    restart: always
    ports:
      - '6379:6379'
    expose:
      - '6379'
    command: redis-server /app/redis.conf

  sentiment-api-service:
    container_name: sentiment-api
    build: ./sentiment_api_service
    command: npm run build:container
    restart: always
    ports:  
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

  neural-network:
    container_name: neural-network
    build: ./neural_network_service
    restart: always
    ports:
      - '5000:5000'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: pfinal